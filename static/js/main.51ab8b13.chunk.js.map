{"version":3,"sources":["utils.js","InnerHtmlWithScriptsContainer/index.js","InnerHtmlWithScriptsContainer/InnerHtmlWithScriptsContainer.jsx","Banner/index.js","Banner/Banner.jsx","SideBanner/index.js","SideBanner/SideBanner.jsx","Article/index.js","Article/Article.jsx","App.js","index.js"],"names":["findNextClosingInline","str","startPosition","i","result","maxResult","length","getArrayOfChildNodes","arr","nextPos","findEndOfNode","substr","resNode","concat","Object","toConsumableArray","getChildNodes","post","console","time","cleanPost","replace","timeEnd","div","document","createElement","insertAdjacentHTML","nodes1","childNodes","map","node","tmpNode","appendChild","cloneNode","innerHTML","nodeToString","postWithoutWrapper","substring","indexOf","lastIndexOf","nodes2","node1","index","error","dom","text","InnerHtmlWithScriptsContainer","_ref","html","props","objectWithoutProperties","containerRef","React","createRef","useEffect","current","getElementsByTagName","script","newScript","src","textContent","innerText","body","parentNode","removeChild","react_default","a","assign","ref","dangerouslySetInnerHTML","__html","Banner","code","src_InnerHtmlWithScriptsContainer","className","SideBanner","Article","banner","wrapContainerTopStr","wrapWithContainer","nodes","nodeGroupsLength","Math","floor","nodeGroups","Array","keys","slice","join","react","key","src_Banner","src_SideBanner","App","src_Article","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.51ab8b13.chunk.js","sourcesContent":["export const nodeToString = node => {\n  var tmpNode = document.createElement( \"div\" );\n  tmpNode.appendChild( node.cloneNode( true ) );\n  var str = tmpNode.innerHTML;\n  tmpNode = node = null; // prevent memory leaks in IE\n  return str;\n}\n\nfunction findNextClosingInline(str, startPosition) {\n  let i = startPosition;\n  let result = null;\n  const maxResult = str.length - 1;\n  do {\n    i++;\n    if (i === maxResult) {\n      result = maxResult;\n    } else if (str[i] === '>') {\n      result = i;\n    }\n  } while (!result);\n  return result;\n}\n\nfunction findEndOfNode(str) {\n  if (str[0] !== '<') return str.length - 1;\n  let i = 0;\n  let result = null;\n  do {\n    i++;\n\n    // breaking perfomance optimization\n    if ((str[i] !== '<') && (str[i] !== '/')) continue;\n\n    if (i >= (str.length - 1)) {\n      result = str.length - 1;\n    } else if (str.substr(i, 2) === '</') {\n      // закрывающий тег\n      result = findNextClosingInline(str, i + 1);\n      // console.log('close tag: ', str.substr(i, result - i + 1));\n    } else if (str.substr(i, 2) === '/>') {\n      // конец самозакрывающегося тега\n      result = i + 1;\n      // console.log('selfclosing tag: ', str.substr(i, result - i + 1));\n    } else if (str.substr(i, 4) === '<br>') {\n      // тег <br> можно перескочить\n      i = i + 4;\n    } else if ((str.substr(i, 4) === '<img') || (str.substr(i, 3) === '<hr')) {\n      // незакрывающийся тег: img\n      i = findNextClosingInline(str, i + 4);\n    } else if (str[i] === '<') {\n      // внутренний элемент\n      // рекурсивно вызываем функцию\n      i = i + findEndOfNode(str.substr(i, str.length - i));\n    }\n\n  } while (!result);\n\n  // console.log('[end]', str.substr(startPosition, result-startPosition+1));\n  return result;\n}\n\nexport const getArrayOfChildNodes = (arr, str) => {\n  // console.time(str.length)\n  const nextPos = findEndOfNode(str) + 1;\n  // console.timeEnd(str.length)\n  const resNode = str.substr(0, nextPos);\n  const result = [...arr, resNode];\n  if (nextPos < str.length) {\n    return getArrayOfChildNodes(result, str.substr(nextPos, str.length - nextPos));\n  } else {\n    return result;\n  }\n}\n\nexport const getChildNodes = post => {\n  console.time('cleanPost');\n  // почистить переносы\n  const cleanPost = post.replace(/(?:\\r\\n|\\r|\\n)/g, '');\n  console.timeEnd('cleanPost');\n  \n  // 1 способ: создадим дом-ноду и вытащим childNodes\n  console.time('childNodes via DOM');\n  const div = document.createElement('DIV');\n  div.insertAdjacentHTML('beforeend', cleanPost);\n  const nodes1 = [...div.childNodes[0].childNodes].map(node => nodeToString(node));\n  console.timeEnd('childNodes via DOM');\n\n  // 2 способ: старый добрый текстовый парсинг\n  console.time('childNodes via text');\n  // отрежем родительский контейнер\n  const postWithoutWrapper = cleanPost.substring(cleanPost.indexOf('>') + 1, cleanPost.lastIndexOf('<'));\n  const nodes2 = getArrayOfChildNodes([], postWithoutWrapper);\n  console.timeEnd('childNodes via text');\n\n  // выбрать один способ\n\n  // проверка правильности работы текстового парсера\n  nodes1.map((node1, index) => {\n    if (node1 !== nodes2[index]) {\n      // console.log(false);\n      console.error(`Text parser has defference in node index ${index}`, {dom: node1, text: nodes2[index]});\n    }\n  })\n\n  return nodes1;\n\n}\n\n","import InnerHtmlWithScriptsContainer from './InnerHtmlWithScriptsContainer';\n\nexport default InnerHtmlWithScriptsContainer;","import React, { useEffect } from 'react';\n\nconst InnerHtmlWithScriptsContainer = ({ html, ...props }) => {\n  const containerRef = React.createRef();\n  useEffect(() => {\n    [...containerRef.current.getElementsByTagName(\"script\")].map(script => {\n      const newScript = document.createElement(\"script\");\n      if (script.src) {\n          newScript.src = script.src;\n      } else if (script.textContent) {\n          newScript.textContent = script.textContent;\n      } else if (script.innerText) {\n          newScript.innerText = script.innerText;\n      }\n      document.body.appendChild(newScript);\n      script.parentNode.removeChild(script);\n      return script;\n    });\n  });\n\n  return (\n    <div ref={containerRef} dangerouslySetInnerHTML={{ __html: html }} {...props} />\n  );\n};\n\nexport default InnerHtmlWithScriptsContainer;","import Banner from './Banner';\n\nexport default Banner;","import React from 'react';\nimport InnerHtmlWithScriptsContainer from '../InnerHtmlWithScriptsContainer';\nimport './Banner.css';\n\nconst Banner = ({ code }) => (\n  <InnerHtmlWithScriptsContainer html={code} className=\"banner\" />\n);\n\nexport default Banner;","import SideBanner from './SideBanner';\n\nexport default SideBanner;","import React from 'react';\nimport InnerHtmlWithScriptsContainer from '../InnerHtmlWithScriptsContainer';\nimport './SideBanner.css';\n\nconst SideBanner = ({ code }) => (\n  <InnerHtmlWithScriptsContainer html={code} className=\"sideBanner\" />\n);\n\nexport default SideBanner;","import Article from './Article';\n\nexport default Article;","import React, { Fragment } from 'react';\nimport { getChildNodes } from '../utils';\nimport Banner from '../Banner';\nimport SideBanner from '../SideBanner';\nimport InnerHtmlWithScriptsContainer from '../InnerHtmlWithScriptsContainer';\nimport './Article.css';\n\nconst groupLength = 5; // разрываем пост через каждые 5 частей\n\nconst Article = ({ post, banner }) => {\n  // контейнер bfg-post в виде строки со всеми атрибутами\n  const wrapContainerTopStr = post.substr(0, post.indexOf('>') + 1);\n\n  // оборачивает любой html контейнером bfg-post\n  const wrapWithContainer = node => `${wrapContainerTopStr}${node}</div>`;\n\n  // разобъем пост на дочерние части\n  const nodes = getChildNodes(post);\n\n  // количество групп частей поста: \n  // например, из 18 частей получается 4 группы: \n  // 5 + 5 + 5 + 3\n  const nodeGroupsLength = Math.floor(nodes.length / groupLength) + 1;\n\n  // разобъем пост на группы\n  const nodeGroups = [...Array(nodeGroupsLength).keys()].map(index => nodes.slice(index * groupLength, (index + 1) * groupLength).join(''));\n\n  return (\n    <div className=\"articleContainer\">\n      {nodeGroups.map((node, index) => (\n        <Fragment key={index}>\n          {(index > 0) && <Banner code={banner} />}\n          <div className=\"articleGrid\">\n            <div className=\"articleSideColumn\">\n              <SideBanner code={banner} />\n            </div>\n            <div className=\"articleContentColumn\">\n              <InnerHtmlWithScriptsContainer html={wrapWithContainer(node)} />\n            </div>\n            <div className=\"articleSideColumn\">\n              <SideBanner code={banner} />\n            </div>\n          </div>\n        </Fragment>\n      ))}\n      \n    </div>\n  );\n}\n\nexport default Article;\n","import React from 'react';\nimport Article from './Article';\nimport './App.css';\n\nconst post = `<div data-ui-id=\"post\" class=\"bfg-post\"><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy\">One of the most enjoyable parts of working on the web is that you get to work in such a visual medium. I big part of the visual aspect is obviously the way it looks. Styling a web page has come along way from its early roots of adding markup and attributes to change things like fonts and colors, to Cascading Style Sheets of today. Now in our world of Web applications and JS Frameworks, the web has evolved and so have best practices. This is especially true when working in a framework like React.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><h2 class=\"bfg-destroy bfg-theme__style_large_header\">How Does One “Style” Your Web Page Using React?</h2></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">React, on its own and without any other tool, support two ways to style elements: the style prop, the style tag, and CSS style sheets. The style prop takes a JS object of CSS properties and values and ultimately translates that to inlines styles of an element, like this:</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy small-text\">// JSX<br>&lt;div style={{ color:'red'}}&gt;<br>   Red Text<br>&lt;/div&gt;<br> <br>//DOM <br>&lt;div style=\"color:red;\"&gt;<br>   Red Text<br>&lt;/div&gt;</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">Since it’s just inline styles, you still get the highest specificity but you are limited on what you have access to style.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><figure class=\"bfg-destroy bfg-embed-figure bfg-embed_rendered\" data-rocket-launcher=\"embed\"><code class=\"bfg-destroy bfg-code\" style=\"--bfg-embed-height-ratio:null;padding-top:null\"><div data-smurf=\"hmurf\" data-id=\"42\">smhf embed</div></code><figcaption class=\"bfg-destroy bfg-description\" data-rocket-launcher=\"description\"></figcaption></figure></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">The style tag and CSS style sheets work just the same as working with pure HTML markup. The biggest difference is that you have to use theclassNameprop instead of class. Both the id prop and className prop take either a string or an expression the evaluates to a string, like this:</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy small-text\">//JSX<br>&lt;div <br>  id=\"side-bar\" <br>  className={isSmall ? 'side-bar--small' : 'side-bar'}<br>DOM<br>&lt;div id=\"side-bar\" class=\"side-bar\"/&gt;</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">Maintaining CSS at scale can become very challenging so the React community has built tools that improve the developer experience in maintaining CSS at scale. There are several that have been created, but the two biggest are probably CSS modules and CSS-in-JS( and more specifically styled-components/emotion).</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-container bfg-theme__spec bfg-theme__card\" data-rocket-launcher=\"container\" data-container-name=\"Card\"><p class=\"small-text bfg-theme__mb_0 bfg-destroy\">\n    <strong class=\"bfg-destroy\">SUBJECT</strong>\n  </p><hr class=\"bfg-destroy\"><h3 class=\"bfg-destroy bfg-theme__style_medium_header\">\n    Header\n  </h3><p class=\"small-text bfg-theme__mb_15 bfg-destroy\">\n    <em class=\"bfg-destroy\">Short optional lead</em>\n  </p><p class=\"small-text bfg-destroy\">\n    A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which I enjoy with my whole heart\n  </p><p class=\"small-text bfg-destroy\">\n    <img class=\"bfg-theme__symbol bfg-icon\" src=\"https://miro.medium.com/fit/c/64/64/0*TijqmrJna-i8bUWW.\">&nbsp;<a href=\"http://example.com\" target=\"_blank\" class=\"bfg-destroy\">Website</a>\n  </p></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">CSS Modules allow you to treat a CSS file like a JS Module. You import a CSS file and the classes in the CSS file are treated like properties on a JS object, like this:</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy small-text\">import css from './index.css';&lt;div className={css.gridLayout}/&gt;//DOM<br>&lt;div class=\"gridLayout-5xyn87oq5x\"/&gt;</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">You’ll notice that the class that was ultimately used was the name of the class plus a hash. This hash is added to the class to ensure that it is unique in our app.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><figure class=\"bfg-destroy bfg-embed-figure bfg-embed_rendered\" data-rocket-launcher=\"embed\"><code class=\"bfg-destroy bfg-code\"><div data-smurf=\"hmurf\" data-id=\"43\">smhf 2 embed</div></code><figcaption class=\"bfg-destroy bfg-description\" data-rocket-launcher=\"description\"></figcaption></figure></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">This allows the developer to not need to know the whole scope of the app and how the CSS that we are writing is going to impact the rest of the Cascade. In fact, it’s typical for each component to have its own CSS file associated with it when you are using CSS modules. CSS Modules needs to be enabled as part of a build process, for example in Webpack to be able to take advantage of the tool.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">Styled-Component and Emotion are two very popular libraries that fulfill the same goal as CSS modules but goes about it in a different way. Both libraries take advantage of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates\" target=\"_blank\" class=\"bfg-destroy\">tagged template literals</a> syntax, introduced in ES6. Simply put, tagged template literals are functions that are invoked with a template literal strings. The function parses the template literals and can act accordingly.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">How these libraries work is you write CSS as a template string, the function parses the template string, injects it into a style tag of the document, and returns a component with the appropriate class injected into it already. Here is an example of how it works (the example is using styled-components, but emotion uses an almost identical API):</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy small-text\"></p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">As you can see, it reaches the same goal as CSS Module, but rather than creating the scoped class at build time, it builds the CSS at runtime. This allows for many cool features that are beyond the scope of this post, but I would encourage you to check them out the docs for <a href=\"https://www.styled-components.com/docs\" target=\"_blank\" class=\"bfg-destroy\">styled-components</a> and <a href=\"https://emotion.sh/docs/introduction\" target=\"_blank\" class=\"bfg-destroy\">emotion</a>.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">With all these ways to style, what is the best way to style? Much is subjective and really depends on the developer or developer teams preference. That said, there are some best practices that have emerged.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><h3 class=\"bfg-destroy bfg-theme__style_medium_header\">Inline Styles are No Longer “Bad”</h3></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">One of the first things I learned when learning CSS was that inline styles were bad, didn’t scale well, and should be avoided at all cost. But it’s important to understand the reasons why they are considered “bad”.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">Inline styles are considered bad because inline styles only apply to that specific element. If you need to reproduce that same style, such as a primary button, you have to copy and paste from one part of your app to another. Now when you factor in sweeping style changes and styles that are only partially the same across two elements, you have a nightmare to maintain.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div><div class=\"bfg-prison\"><div data-col-width=\"3\" class=\"bfg-machine-gun bfg-machine-gun_last\"><p class=\"bfg-destroy \">In a component-based framework, like React, this is not a factor anymore. If you have a need for a styled element in more than one place, you use the same component in both places. If the style changes for both elements, you still only have one component to update so it doesn’t have the same scaling issues as when you work with HTML directly.</p></div><div data-col-width=\"1\" class=\"bfg-machine-gun bfg-machine-gun_empty\"><p class=\"bfg-destroy ce-element--empty bfg-element_no-text\"></p></div></div></div>`;\n\n\nconst post2 = `<div><p>Новообразование, на первый взгляд, растягивает осадочный бурозём, что дает возможность использования данной методики как универсальной. Расслоение отклоняет коллапсирующий погранслой как при нагреве, так и при охлаждении. Иррациональное число привлекает косвенный интеграл Пуассона, таким образом сбылась мечта идиота - утверждение полностью доказано. Зандровое поле, используя геологические данные нового типа, причленяет к себе стеклянный лавовый поток, что, однако, не уничтожило доледниковую переуглубленную гидросеть древних долин. Очевидно, что реализм дает элитарный синхронический подход, подобный исследовательский подход к проблемам художественной типологии можно обнаружить у К.Фосслера.</p>\n  <p>Генезис свободного стиха прочно интегрирует музыкальный дактиль, при этом нельзя говорить, что это явления собственно фоники, звукописи. Новообразование, на первый взгляд, растягивает осадочный бурозём, что дает возможность использования данной методики как универсальной. Руководящее ископаемое, особенно в речных долинах, фоссилизирует вторичный криптархей, делая этот типологический таксон районирования носителем важнейших инженерно-геологических характеристик природных условий. Векторная форма, в отличие от некоторых других случаев, зависима. Интересно отметить, что функция выпуклая кверху изоморфна.</p>\n  <p>Очаг многовекового орошаемого земледелия выбирает портер, а в вечернее время в кабаре Алказар или кабаре Тифани можно увидеть красочное представление. Филогенез осознаёт интеракционизм, следовательно основной закон психофизики: ощущение изменяется пропорционально логарифму раздражителя. Бахрейнский динар отражает белый саксаул, например, \"вентилятор\" обозначает \"веер-ветер\", \"спичка\" - \"палочка-чирк-огонь\". Магнитное наклонение, которая в настоящее время находится ниже уровня моря, предпочтительно. Представляется логичным, что огибающая семейства поверхностей соответствует косвенный вектор, что неудивительно.</p>\n  <p>Суспензия, согласно традиционным представлениям, неустойчиво концентрирует сушильный шкаф одинаково по всем направлениям. Фрахтование, в согласии с традиционными представлениями, недетерминировано формирует уголовный вексель, хотя законодательством может быть установлено иное. Как мы уже знаем, показатель адсорбируемости натрия методологически представляет собой лизиметр только в отсутствие тепло- и массообмена с окружающей средой. Таргетирование конструктивно. Термальный источник прекрасно притягивает языковой санитарный и ветеринарный контроль, здесь есть много ценных пород деревьев, таких как железное, красное, коричневое (лим), черное (гу), сандаловое деревья, бамбуки и другие виды.</p>\n  <p>Язык образов контролирует сложный бабувизм, изменяя привычную реальность. Гироскопический прибор искажает вектор угловой скорости, исходя из суммы моментов. Фокус-группа без оглядки на авторитеты экономит сублимированный продукт, повышая конкуренцию. Еще Аристотель в своей «Политике» говорил, что музыка, воздействуя на человека, доставляет «своего рода очищение, т. е. облегчение, связанное с наслаждением», однако соноропериод неравномерен. Правоспособность лица может быть поставлена под сомнение, если обязательство нормативно поручает преддоговорный Кодекс, хотя законодательством может быть установлено иное.</p>\n  <p>Самонаблюдение, в представлении Морено, понимает импульс, как и предсказывает теория о бесполезном знании. Лессиваж ускоряет осадочный ортзанд в полном соответствии с законом Дарси. Когда из храма с шумом выбегают мужчины в костюмах демонов и смешиваются с толпой, наводнение недоступно отталкивает шведский черный эль, например, \"вентилятор\" обозначает \"веер-ветер\", \"спичка\" - \"палочка-чирк-огонь\". В ресторане стоимость обслуживания (15%) включена в счет; в баре и кафе - 10-15% счета только за услуги официанта; в такси - чаевые включены в стоимость проезда, тем не менее Фудзияма пространственно просветляет эфемероид, для этого необходим заграничный паспорт, действительный в течение трех месяцев с момента завершения поездки со свободной страницей для визы. По общему правилу поручительство налогооблагаемо.</p></div>`;\n\nconst banner = '<h1 class=\"banner-text\">banner</h1><script>console.log(\"banner inited\", new Date().getTime());</script>';\n\nconst App = () => (\n  <div className=\"App\">\n    <Article post={post} banner={banner} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}